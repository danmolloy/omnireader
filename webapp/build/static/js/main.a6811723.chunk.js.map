{"version":3,"sources":["components/shared/ProgressBar.js","components/shared/OmniChip.js","components/Library/ChapterListItem.js","queries/story.js","components/Library/StoryDescription.js","components/shared/breakpoints.js","components/shared/SectionHeader.js","components/Library/StoryContents.js","components/shared/storyUtils.js","components/Library/StoryInfo.js","components/Library/ReadButton.js","components/Library/StorySummary.js","components/Library/StoryListItem.js","components/Library/AddStory.js","components/Library/Library.js","queries/chapter.js","components/Reader/ReaderContent.js","components/Reader/ChapterNavBar.js","components/Reader/Reader.js","hooks/useInterval.js","components/Library/Story.js","theme.js","App.js","index.js"],"names":["ProgressBar","_ref","value","showPercent","react_default","a","createElement","ProgressBar_Wrapper","Percent","Math","round","Bar","color","Wrapper","styled","div","_templateObject","span","_templateObject2","grey","Slider","_templateObject3","OmniChip","Chip","OmniChip_templateObject","ChapterListItem","chapter","ChapterListItem_Wrapper","ChapterLink","to","concat","id","TitleRow","ChapterTitle","title","new","label","size","progress","shared_ProgressBar","Button","ChapterListItem_templateObject","ChapterListItem_templateObject2","h3","ChapterListItem_templateObject3","Link","_templateObject4","GET_STORIES","gql","story_templateObject","GET_STORY","story_templateObject2","CREATE_STORY","story_templateObject3","DELETE_STORY","story_templateObject4","TOC_CHECKED","_templateObject5","StoryDescription","refetch","story","infoChunks","whitelist","elements","details","information","split","filter","item","includes","map","InfoItem","push","href","canonicalUrl","Launch_default","fontSize","createInfoChunks","_useState","useState","_useState2","Object","slicedToArray","menuAnchor","setMenuAnchor","_useMutation","useMutation","_useMutation2","deleteStoryMutation","error","StoryDescription_Wrapper","MainContent","Description","description","Information","_","chunk","ceil","length","message","MenuWrapper","MenuButton","onClick","event","currentTarget","MoreVert_default","StyledMenu","transformOrigin","horizontal","vertical","anchorEl","open","Boolean","onClose","DeleteButton","regenerator_default","async","_context","prev","next","awrap","variables","stop","StoryDescription_templateObject","StoryDescription_templateObject2","StoryDescription_templateObject3","StoryDescription_templateObject4","StoryDescription_templateObject5","_templateObject6","_templateObject7","MenuItem","_templateObject8","red","Menu","_templateObject9","useMedScreen","useMediaQuery","SectionHeader","children","Header","h1","SectionHeader_templateObject","StoryContents","medScreen","useEffect","StoryContents_Wrapper","Divider","StoryDescription_StoryDescription","SectionHeader_SectionHeader","StyledList","chapters","Fragment","ChapterListItem_ChapterListItem","key","List","StoryContents_templateObject","ExpansionPanelDetails","StoryContents_templateObject2","findCurrentChapter","maxBy","progressUpdatedAt","storyUtils","currentChapter","totalChapters","number","StoryInfo","info","noLink","timeKey","updated","find","storyProgress","DivWrapper","LinkWrapper","MainInfo","Title","Author","author","ExtraInfo","newChapters","WrapperStyles","StoryInfo_templateObject","StoryInfo_templateObject2","h2","StoryInfo_templateObject3","StoryInfo_templateObject4","StoryInfo_templateObject5","StoryInfo_templateObject6","lighten","ReadButton","StyledButton","ReadLink","ChevronRight_default","ReadButton_templateObject","lightBlue","ReadButton_templateObject2","StorySummary","image","Image","src","avatar","ImageReadLink","Summary","e","stopPropagation","ImageContainer","StoryInfo_StoryInfo","orientation","ReadButton_ReadButton","StorySummary_templateObject","props","StorySummary_templateObject2","img","StorySummary_templateObject3","StorySummary_templateObject4","StoryListItem","first","handleChange","processedStory","processStory","StoryListItem_Wrapper","expanded","onChange","elevation","SummaryWrapper","expandIcon","ExpandMore_default","StorySummary_StorySummary","StoryContents_StoryContents","forEach","tocLastChecked","created_at","ExpansionPanel","StoryListItem_templateObject","ExpansionPanelSummary","StoryListItem_templateObject2","AddStory","onSuccess","input","setInput","createStory","AddStory_Wrapper","Form","onSubmit","preventDefault","url","StyledTextField","placeholder","target","AddStory_StyledButton","type","variant","Paper","AddStory_templateObject","TextField","AddStory_templateObject2","form","AddStory_templateObject3","AddStory_templateObject4","Library","_useQuery","useQuery","loading","data","setOpen","sendTOCChecked","Library_Wrapper","AddStory_AddStory","ListWrapper","stories","index","StoryListItem_StoryListItem","isOpen","storyId","Library_templateObject","Library_templateObject2","GET_CHAPTER","chapter_templateObject","UPDATE_PROGRESS","chapter_templateObject2","ReaderContent","content","updateProgress","ref","useRef","scrollableHeight","current","scrollHeight","clientHeight","scroll","newProgress","scrollTop","Number","parseFloat","toPrecision","scrollTo","onscroll","ReaderContent_Wrapper","Content","dangerouslySetInnerHTML","__html","ReaderContent_templateObject","ReaderContent_templateObject2","ChapterNav","Nav","disabled","ChapterNavBar","_ref2","ChapterNavBar_Wrapper","ChapterNavBar_ChapterNav","prevId","ChevronLeft","nextId","esm_ChevronRight","ChapterNavBar_templateObject","ChapterNavBar_templateObject2","Reader","useParams","setProgress","sendProgress","callback","delay","savedCallback","setInterval","clearInterval","useInterval","chapterId","Reader_Wrapper","Inner","TopNav","ChapterNavBar_ChapterNavBar","style","alignSelf","ReaderContent_ReaderContent","ProgressWrapper","Reader_templateObject","Reader_templateObject2","TopAndBottom","Reader_templateObject3","Reader_templateObject4","Story","StyledLink","Story_Wrapper","Story_templateObject","Story_templateObject2","theme","createMuiTheme","palette","primary","light","main","dark","secondary","text","hint","background","paper","default","highlight","typography","fontFamily","button","fontWeight","apollo","ApolloClient","App","react_common_esm","client","react_router_dom","ThemeProvider","react_router","path","Reader_Reader","Story_Story","Library_Library","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.a6811723.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport grey from \"@material-ui/core/colors/grey\";\nimport { Slider } from \"@material-ui/core\";\n\nconst ProgressBar = ({ value, showPercent }) => {\n  return (\n    <Wrapper>\n      {showPercent && <Percent>{Math.round(value)}%</Percent>}\n      <Bar value={value} color=\"secondary\" />\n    </Wrapper>\n  );\n};\n\nexport default ProgressBar;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Percent = styled.span`\n  font-size: 0.8em;\n  width: 32px;\n  margin-right: 8px;\n  color: ${grey[800]};\n  font-family: \"Merriweather Sans\";\n`;\n\nconst Bar = styled(Slider)`\n  && {\n    cursor: inherit;\n    .MuiSlider-rail {\n      background-color: ${grey[400]};\n    }\n    .MuiSlider-active {\n      box-shadow: none;\n    }\n\n    .MuiSlider-thumbColorSecondary:hover {\n      box-shadow: none;\n    }\n  }\n`;\n","import { Chip } from \"@material-ui/core\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nexport const OmniChip = styled(Chip)`\n  && {\n    margin-left: 12px;\n    color: white;\n    font-family: \"Merriweather Sans\";\n    font-weight: bold;\n    align-self: center;\n    align-items: center;\n    .MuiChip-label {\n      margin-top: 0;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport { grey } from \"@material-ui/core/colors\";\nimport ProgressBar from \"../shared/ProgressBar\";\nimport { OmniChip } from \"../shared/OmniChip\";\n\nexport const ChapterListItem = ({ chapter }) => {\n  return (\n    <Wrapper>\n      <ChapterLink to={`/chapter/${chapter.id}`}>\n        <TitleRow>\n          <ChapterTitle>{chapter.title}</ChapterTitle>\n          {chapter.new && (\n            <OmniChip label=\"New\" color=\"secondary\" size=\"small\" />\n          )}\n        </TitleRow>\n        {chapter.progress > 0 && (\n          <ProgressBar value={chapter.progress * 100} showPercent />\n        )}\n      </ChapterLink>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(Button)`\n  height: 5rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding-left: 5%;\n  padding-right: 5%;\n  && {\n    text-transform: none;\n    padding-top: 0;\n    padding-bottom: 0;\n    text-align: left;\n    align-items: stretch;\n    padding-left: 2%;\n    .MuiButton-label {\n      a {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n      }\n      height: 100%;\n      :hover {\n        h3 {\n          text-decoration: underline;\n        }\n      }\n    }\n  }\n`;\n\nconst TitleRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst ChapterTitle = styled.h3`\n  margin: 0;\n  font-family: \"Merriweather\", serif;\n`;\n\nconst ChapterLink = styled(Link)`\n  height: 100%;\n  width: 100%;\n  text-decoration: none;\n  color: ${grey[900]};\n`;\n","import { gql } from \"apollo-boost\";\n\nexport const GET_STORIES = gql`\n  {\n    stories {\n      id\n      title\n      author\n      avatar\n      canonicalUrl\n      tocLastChecked\n      updated_at\n      created_at\n      details {\n        description\n        information\n      }\n      chapters {\n        id\n        title\n        number\n        progress\n        progressUpdatedAt\n        url\n        updated_at\n        created_at\n      }\n    }\n  }\n`;\n\nexport const GET_STORY = gql`\n  query GetStory($id: ID!) {\n    story(id: $id) {\n      id\n      title\n      author\n      avatar\n      canonicalUrl\n      tocLastChecked\n      updated_at\n      created_at\n      details {\n        description\n        information\n      }\n      chapters {\n        id\n        title\n        number\n        progress\n        progressUpdatedAt\n        url\n        updated_at\n        created_at\n      }\n    }\n  }\n`;\n\nexport const CREATE_STORY = gql`\n  mutation CreateStory($url: String!) {\n    createStory(url: $url) {\n      id\n      title\n      author\n      canonicalUrl\n      chapters {\n        id\n        title\n        number\n        url\n      }\n    }\n  }\n`;\n\nexport const DELETE_STORY = gql`\n  mutation DeleteStory($id: ID!) {\n    deleteStory(id: $id)\n  }\n`;\n\nexport const TOC_CHECKED = gql`\n  mutation TOCChecked($storyId: ID!) {\n    tocChecked(storyId: $storyId)\n  }\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport _ from \"lodash\";\nimport LaunchIcon from \"@material-ui/icons/Launch\";\nimport { Button, Menu, MenuItem } from \"@material-ui/core\";\nimport { DELETE_STORY } from \"../../queries/story\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { red } from \"@material-ui/core/colors\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nconst createInfoChunks = story => {\n  const whitelist = [\"Words\", \"Published\", \"Status\"];\n  const items = story.details.information.split(\" - \");\n  const elements = items\n    .filter(item => whitelist.includes(item.split(\": \")[0]))\n    .map(item => {\n      return (\n        <InfoItem>\n          <strong>{item.split(\": \")[0]}: </strong>\n          {item.split(\": \")[1]}\n        </InfoItem>\n      );\n    });\n  elements.push(\n    <InfoItem>\n      <a href={story.canonicalUrl}>\n        Source <LaunchIcon fontSize=\"inherit\" />\n      </a>\n    </InfoItem>\n  );\n  return elements;\n};\n\nexport const StoryDescription = ({ refetch, story }) => {\n  const infoChunks = createInfoChunks(story);\n  const [menuAnchor, setMenuAnchor] = useState(null);\n  const openMenu = event => {\n    setMenuAnchor(event.currentTarget);\n  };\n\n  const closeMenu = () => {\n    setMenuAnchor(null);\n  };\n\n  const [deleteStoryMutation, { error }] = useMutation(DELETE_STORY);\n  const deleteStory = async () => {\n    await deleteStoryMutation({ variables: { id: story.id } });\n    refetch();\n  };\n\n  return (\n    <Wrapper>\n      <MainContent>\n        <Description>{story.details.description}</Description>\n        <Information>\n          {_.chunk(infoChunks, Math.ceil(infoChunks.length / 4)).map(chunk => (\n            <div>{chunk}</div>\n          ))}\n        </Information>\n        {error && <p>{error.message.split(\":\")[1]}</p>}\n      </MainContent>\n      <MenuWrapper>\n        <MenuButton onClick={openMenu}>\n          <MoreVertIcon />\n        </MenuButton>\n        <StyledMenu\n          transformOrigin={{ horizontal: 70, vertical: -20 }}\n          anchorEl={menuAnchor}\n          open={Boolean(menuAnchor)}\n          onClose={closeMenu}\n        >\n          <DeleteButton onClick={deleteStory}>Delete</DeleteButton>\n        </StyledMenu>\n      </MenuWrapper>\n    </Wrapper>\n  );\n};\n\n// TODO: Handle menus better - positioning is currently messed up and this should be a shared component\nconst MenuButton = styled(Button)`\n  && {\n    position: absolute;\n    top: 0px;\n    right: 0px;\n    min-width: 32px;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst MenuWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  position: relative;\n`;\n\nconst MainContent = styled.div`\n  padding: 3%;\n\n  margin-right: 32px;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  justify-content: space-around;\n`;\n\nconst Description = styled.div`\n  margin-bottom: 30px;\n  font-style: italic;\n`;\n\nconst Information = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  div {\n    align-items: flex-start;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst InfoItem = styled.span`\n  svg {\n    margin-bottom: -4px;\n  }\n`;\n\nconst DeleteButton = styled(MenuItem)`\n  && {\n    color: ${red[500]};\n  }\n`;\n\nconst StyledMenu = styled(Menu)`\n  && {\n    .MuiMenu-paper {\n    }\n  }\n`;\n","import { useMediaQuery } from \"@material-ui/core\";\n\nexport const useBigScreen = () => useMediaQuery(\"(min-width:1200px)\");\nexport const useMedScreen = () => useMediaQuery(\"(min-width:700px)\");\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const SectionHeader = ({ children }) => {\n  return <Header>{children}</Header>;\n};\n\nconst Header = styled.h1`\n  font-family: cursive;\n  overflow: hidden;\n  text-align: center;\n\n  :before,\n  :after {\n    background-color: #000;\n    content: \"\";\n    display: inline-block;\n    height: 2px;\n    position: relative;\n    vertical-align: middle;\n    width: 30%;\n  }\n\n  :before {\n    right: 0.5em;\n    margin-left: -25%;\n  }\n\n  :after {\n    left: 0.5em;\n    margin-right: -25%;\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport List from \"@material-ui/core/List\";\nimport { ChapterListItem } from \"./ChapterListItem\";\nimport { StoryDescription } from \"./StoryDescription\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport { Divider } from \"@material-ui/core\";\nimport { useMedScreen } from \"../shared/breakpoints\";\nimport { SectionHeader } from \"../shared/SectionHeader\";\n\nexport const StoryContents = ({ refetch, story }) => {\n  const medScreen = useMedScreen();\n  useEffect(() => {});\n  return (\n    <Wrapper>\n      <Divider />\n      <StoryDescription refetch={refetch} story={story} />\n      {!medScreen && <SectionHeader>Chapters</SectionHeader>}\n\n      <StyledList>\n        {story.chapters.map(chapter => {\n          return (\n            <>\n              <Divider />\n              <ChapterListItem key={chapter.id} chapter={chapter} />\n            </>\n          );\n        })}\n      </StyledList>\n    </Wrapper>\n  );\n};\n\nconst StyledList = styled(List)`\n  && {\n    padding-top: 0;\n  }\n`;\n\nconst Wrapper = styled(ExpansionPanelDetails)`\n  @media (min-width: 700px) {\n    max-height: 50vh;\n  }\n  flex-direction: column;\n  overflow-x: hidden;\n  overflow-y: scroll;\n  ::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 7px;\n  }\n  ::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background-color: rgba(0, 0, 0, 0.5);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5);\n  }\n\n  && {\n    padding: 0;\n  }\n`;\n","import _ from \"lodash\";\n\nconst findCurrentChapter = story =>\n  _.maxBy(story.chapters, chapter => chapter.progressUpdatedAt) ||\n  story.chapters[0];\n\nconst calculateStoryProgress = story => {\n  if (story.chapters.length === 0) return 0;\n  const currentChapter = findCurrentChapter(story);\n  if (!currentChapter) return 0;\n\n  const totalChapters = story.chapters.length;\n  const completedChapters = currentChapter.number - 1;\n  return (\n    ((completedChapters + 1 * currentChapter.progress) / totalChapters) * 100\n  );\n};\n\nexport default { findCurrentChapter, calculateStoryProgress };\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ProgressBar from \"../shared/ProgressBar\";\nimport { lighten } from \"polished\";\nimport grey from \"@material-ui/core/colors/grey\";\nimport { Link } from \"react-router-dom\";\nimport { useMedScreen } from \"../shared/breakpoints\";\nimport storyUtils from \"../shared/storyUtils\";\nimport { OmniChip } from \"../shared/OmniChip\";\n\nexport const StoryInfo = ({ story, noLink }) => {\n  const medScreen = useMedScreen();\n  const getValueFromInfo = (info, key) =>\n    info\n      .split(\" - \")\n      .find(item => item.includes(key))\n      .split(\": \")[1];\n\n  // Use the updated info if it's there, otherwise use published. We're calling it updated in our view anyway.\n  const timeKey = story.details.information.includes(\"Updated\")\n    ? \"Updated\"\n    : \"Published\";\n  const updated = getValueFromInfo(story.details.information, timeKey);\n\n  const storyProgress = storyUtils.calculateStoryProgress(story);\n  const Wrapper = medScreen || noLink ? DivWrapper : LinkWrapper;\n\n  return (\n    <Wrapper to={`/story/${story.id}`}>\n      <MainInfo>\n        <Title>{story.title}</Title>\n        <Author>{story.author}</Author>\n      </MainInfo>\n      <ExtraInfo>\n        <span>\n          {story.chapters.length}{\" \"}\n          {story.chapters.length === 1 ? \"chapter\" : \"chapters\"}\n          {story.newChapters && (\n            <OmniChip label=\"New\" color=\"secondary\" size=\"small\" />\n          )}\n        </span>\n        <span>Updated {updated}</span>\n      </ExtraInfo>\n\n      {storyProgress > 0 && <ProgressBar value={storyProgress} showPercent />}\n    </Wrapper>\n  );\n};\n\nconst WrapperStyles = `\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  flex-grow: 1;\n  padding-right: 2%;\n  padding-left: 2%;\n  justify-content: space-around;\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst DivWrapper = styled.div`\n  ${WrapperStyles}\n`;\n\nconst LinkWrapper = styled(Link)`\n  ${WrapperStyles}\n`;\n\nconst Title = styled.h2`\n  @media (min-width: 700px) {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    font-size: 1.4em;\n  }\n\n  @media (max-width: 700px) {\n    font-size: 1.3em;\n  }\n  margin: 0;\n  width: 100%;\n`;\n\nconst Author = styled.span`\n  font-style: italic;\n  display: inline-flex;\n  align-self: left;\n  @media (min-width: 700px) {\n    align-self: center;\n  }\n`;\n\nconst MainInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst ExtraInfo = styled.div`\n  display: flex;\n  @media (max-width: 700px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  span {\n    margin-top: 4px;\n  }\n  justify-content: space-around;\n  font-family: \"Merriweather Sans\", sans-serif;\n  color: ${lighten(0.3, grey[900])};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\nimport grey from \"@material-ui/core/colors/grey\";\nimport storyUtils from \"../shared/storyUtils\";\n\nexport const ReadButton = ({ story }) => {\n  const storyProgress = storyUtils.calculateStoryProgress(story);\n  const currentChapter = storyUtils.findCurrentChapter(story);\n\n  return (\n    <StyledButton color=\"secondary\">\n      <ReadLink to={`/chapter/${currentChapter.id}`}>\n        {storyProgress === 0 ? \"Start\" : \"Continue\"}\n        <ChevronRight />\n      </ReadLink>\n    </StyledButton>\n  );\n};\n\nconst StyledButton = styled(Button)`\n  && {\n    min-width: 7rem;\n    color: ${grey[900]};\n    border-radius: 0;\n    padding: 0;\n    padding-left: 8px;\n    :hover {\n      background: ${lightBlue[100]};\n    }\n  }\n  cursor: pointer;\n  outline: none;\n`;\n\nconst ReadLink = styled(Link)`\n  height: 7rem;\n  width: 100%;\n  color: ${grey[900]};\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport grey from \"@material-ui/core/colors/grey\";\nimport { Divider } from \"@material-ui/core\";\nimport { StoryInfo } from \"./StoryInfo\";\nimport { Link } from \"react-router-dom\";\nimport { ReadButton } from \"./ReadButton\";\nimport { useMedScreen } from \"../shared/breakpoints\";\nimport storyUtils from \"../shared/storyUtils\";\n\nexport const StorySummary = ({ story, noLink }) => {\n  const currentChapter = storyUtils.findCurrentChapter(story);\n  const medScreen = useMedScreen();\n  let image = null;\n  if (medScreen || noLink) {\n    image = <Image src={story.avatar || \"/ffn_anon.webp\"} />;\n  } else {\n    image = (\n      <ImageReadLink to={`/chapter/${currentChapter.id}`}>\n        <Image src={story.avatar || \"/ffn_anon.webp\"} />\n      </ImageReadLink>\n    );\n  }\n\n  return (\n    <Summary onClick={e => e.stopPropagation()} noLink={noLink}>\n      <ImageContainer>{image}</ImageContainer>\n\n      <StoryInfo story={story} noLink={noLink} />\n\n      {medScreen && (\n        <>\n          <Divider orientation=\"vertical\" />\n          <ReadButton story={story} />\n        </>\n      )}\n    </Summary>\n  );\n};\n\nconst Summary = styled.div`\n  width: 100%;\n  @media (min-width: 700px) {\n    height: 7rem;\n  }\n  @media (max-width: 700px) {\n    height: 11rem;\n    text-align: left;\n    cursor: ${props => (props.noLink ? \"default\" : \"pointer\")};\n    :hover {\n      background-color: ${props => (props.noLink ? \"inherit\" : grey[50])};\n    }\n  }\n  display: flex;\n  justify-content: space-between;\n  background-color: white;\n  cursor: default;\n`;\n\nconst ImageContainer = styled.div`\n  display: flex;\n  min-width: 6rem;\n  height: 100%;\n  align-self: center;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Image = styled.img`\n  object-fit: contain;\n  max-width: 6rem;\n  max-height: 6rem;\n`;\n\nconst ImageReadLink = styled(Link)`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { StoryContents } from \"./StoryContents\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport { StorySummary } from \"./StorySummary\";\nimport { useMedScreen } from \"../shared/breakpoints\";\n\nexport const StoryListItem = ({\n  refetch,\n  story,\n  first,\n  open,\n  handleChange\n}) => {\n  const medScreen = useMedScreen();\n  const processedStory = processStory(story);\n\n  if (!processedStory) return <h1> Loading </h1>;\n  return (\n    <Wrapper expanded={open} onChange={handleChange} elevation={2}>\n      <SummaryWrapper first={first} expandIcon={medScreen && <ExpandMore />}>\n        <StorySummary story={processedStory} />\n      </SummaryWrapper>\n      {medScreen && <StoryContents refetch={refetch} story={processedStory} />}\n    </Wrapper>\n  );\n};\n\nconst processStory = story => {\n  story.newChapters = false;\n  story.chapters.forEach(chapter => {\n    if (!story.tocLastChecked || chapter.created_at > story.tocLastChecked) {\n      chapter.new = true;\n      story.newChapters = true;\n    } else {\n      chapter.new = false;\n    }\n  });\n  return story;\n};\n\nconst Wrapper = styled(ExpansionPanel)``;\n\nconst SummaryWrapper = styled(ExpansionPanelSummary)`\n  && {\n    .MuiExpansionPanelSummary-content {\n      margin: 0;\n      max-width: calc(100% - 5rem);\n      min-width: calc(100% - 5rem);\n      @media (max-width: 700px) {\n        max-width: 100%;\n        min-width: 100%;\n      }\n    }\n    .MuiExpansionPanelSummary-expandIcon {\n      margin: 0 16px;\n    }\n    padding: 0;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n  }\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { CREATE_STORY } from \"../../queries/story\";\n\nexport const AddStory = ({ onSuccess }) => {\n  const [input, setInput] = useState(\"\");\n  const [createStory, { error }] = useMutation(CREATE_STORY);\n\n  const submitForm = async e => {\n    e.preventDefault();\n    await createStory({ variables: { url: input } });\n    onSuccess();\n    setInput(\"\");\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={submitForm}>\n        <StyledTextField\n          color=\"secondary\"\n          label=\"Add Story\"\n          placeholder=\"Enter URL...\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n        ></StyledTextField>\n        <StyledButton type=\"submit\" variant=\"contained\" color=\"secondary\">\n          Add Story\n        </StyledButton>\n      </Form>\n      {error && <p>{error.message.split(\":\")[1]}</p>}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(Paper)`\n  width: 100%;\n  padding: 16px 0;\n`;\n\nconst StyledTextField = styled(TextField)`\n  && {\n    width: 70%;\n    margin-right: 16px;\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst StyledButton = styled(Button)`\n  && {\n    color: white;\n  }\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport List from \"@material-ui/core/List\";\nimport { StoryListItem } from \"./StoryListItem\";\nimport { AddStory } from \"./AddStory\";\nimport { GET_STORIES, TOC_CHECKED } from \"../../queries/story\";\nimport { useMedScreen } from \"../shared/breakpoints\";\nimport { SectionHeader } from \"../shared/SectionHeader\";\n\nexport const Library = () => {\n  const { loading, error, data, refetch } = useQuery(GET_STORIES);\n  const [open, setOpen] = useState(null);\n  const medScreen = useMedScreen();\n\n  const [sendTOCChecked] = useMutation(TOC_CHECKED);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  const handleChange = id => (event, isOpen) => {\n    setOpen(isOpen ? id : false);\n    if (isOpen) {\n      sendTOCChecked({\n        variables: { storyId: id }\n      });\n    }\n  };\n\n  return (\n    <Wrapper>\n      {medScreen && <AddStory onSuccess={() => refetch()} />}\n      <ListWrapper>\n        <SectionHeader>Your Library</SectionHeader>\n        <List>\n          {data.stories.map((story, index) => {\n            return (\n              <StoryListItem\n                // TODO: passing refetch down here seems like a code smell\n                refetch={refetch}\n                open={open === story.id}\n                handleChange={handleChange(story.id)}\n                key={story.id}\n                story={story}\n              />\n            );\n          })}\n        </List>\n      </ListWrapper>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  @media (min-width: 700px) {\n    padding: 2%;\n    min-width: 700px;\n    width: 80%;\n  }\n  @media (max-width: 700px) {\n    width: 100%;\n  }\n  margin: auto;\n  text-align: center;\n`;\n\nconst ListWrapper = styled(Paper)`\n  @media (max-width: 700px) {\n    ul {\n      padding: 0;\n    }\n  }\n  @media (min-width: 700px) {\n    margin-top: 2%;\n    padding: 2%;\n  }\n  padding-top: 1%;\n`;\n","import { gql } from \"apollo-boost\";\n\nexport const GET_CHAPTER = gql`\n  query GetChapter($id: ID!) {\n    chapter(id: $id) {\n      id\n      title\n      number\n      progress\n      progressUpdatedAt\n      url\n      content\n      nextId\n      prevId\n      updated_at\n      created_at\n    }\n  }\n`;\n\nexport const UPDATE_PROGRESS = gql`\n  mutation UpdateProgress($chapterId: ID!, $progress: Float!) {\n    updateProgress(chapterId: $chapterId, progress: $progress) {\n      id\n      progress\n    }\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nexport const ReaderContent = ({ chapter, content, updateProgress }) => {\n  const ref = useRef(null);\n  const scrollableHeight = () =>\n    ref.current.scrollHeight - ref.current.clientHeight;\n\n  const scroll = e => {\n    const newProgress = ref.current.scrollTop / scrollableHeight();\n    updateProgress(Number.parseFloat(newProgress.toPrecision(6)));\n  };\n\n  useEffect(() => {\n    updateProgress(chapter.progress);\n    const current = ref.current;\n    current.scrollTo(0, chapter.progress * scrollableHeight());\n    current.onscroll = scroll;\n    return () => (current.onscroll = null);\n  }, [chapter.id]);\n\n  return (\n    <Wrapper ref={ref}>\n      {/* TODO: Security */}\n      <Content dangerouslySetInnerHTML={{ __html: content }} />\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  width: 100%;\n  @media (min-width: 1200px) {\n    min-width: 900px;\n  }\n  align-self: center;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Content = styled.div`\n  @media (min-width: 900px) {\n    max-width: 900px;\n  }\n  padding-left: 4vw;\n  padding-right: 4vw;\n  @media (max-width: 900px) {\n    max-width: 900px;\n    padding-top: 0;\n  }\n  line-height: 1.7;\n  font-size: 1.05em;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ChevronLeft, ChevronRight } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport { grey } from \"@material-ui/core/colors\";\n\nconst ChapterNav = ({ target, children }) => {\n  return (\n    <Nav\n      disabled={!target}\n      onClick={e => !target && e.preventDefault()}\n      to={`/chapter/${target}`}\n    >\n      {children}\n    </Nav>\n  );\n};\n\nexport const ChapterNavBar = ({ chapter }) => {\n  return (\n    <Wrapper>\n      <ChapterNav target={chapter.prevId}>\n        <>\n          <ChevronLeft />\n          {\"Prev\"}\n        </>\n      </ChapterNav>\n      <Nav to=\"/\">Library</Nav>\n      <ChapterNav target={chapter.nextId}>\n        <>\n          {\"Next\"}\n          <ChevronRight />\n        </>\n      </ChapterNav>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  height: 48px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Nav = styled(Link)`\n  && {\n    text-decoration: none;\n    :hover {\n      text-decoration: ${props => (props.disabled ? \"none\" : \"underline\")};\n    }\n    user-select: none;\n    cursor: ${props => (props.disabled ? \"default\" : \"pointer\")};\n    font-size: 1.2em;\n    display: flex;\n    align-items: center;\n    color: ${props => (props.disabled ? grey[400] : grey[800])};\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_CHAPTER } from \"../../queries/chapter\";\nimport { ReaderContent } from \"./ReaderContent\";\nimport { useInterval } from \"../../hooks/useInterval\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATE_PROGRESS } from \"../../queries/chapter\";\nimport ProgressBar from \"../shared/ProgressBar\";\nimport { Divider, Paper } from \"@material-ui/core\";\nimport { ChapterNavBar } from \"./ChapterNavBar\";\n\nexport const Reader = () => {\n  const { id } = useParams();\n  const [progress, setProgress] = useState(null);\n\n  const { loading, error, data } = useQuery(GET_CHAPTER, { variables: { id } });\n  const [sendProgress] = useMutation(UPDATE_PROGRESS);\n\n  const updateProgress = progress => {\n    setProgress(progress);\n  };\n\n  useInterval(() => {\n    if (!data || progress === data.chapter.progress) return;\n    sendProgress({\n      variables: { chapterId: data.chapter.id, progress: progress }\n    });\n  }, 1000);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  const chapter = data.chapter;\n\n  const content = `<h1>${chapter.title}</h1>` + chapter.content;\n\n  return (\n    <Wrapper>\n      {chapter && (\n        <Inner>\n          <TopNav>{<ChapterNavBar chapter={chapter} />}</TopNav>\n          <Divider style={{ alignSelf: \"stretch\" }} />\n          <ReaderContent\n            updateProgress={updateProgress}\n            chapter={chapter}\n            content={content}\n          />\n          <ProgressWrapper>\n            {/* TODO: For some reason, can't style ProgressBar directly */}\n            {/* TODO: progress is momentarily stale when changing chapter */}\n            <ProgressBar value={progress * 100} showPercent />\n          </ProgressWrapper>\n        </Inner>\n      )}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  margin: auto;\n`;\n\nconst Inner = styled(Paper)`\n  display: flex;\n  width: 100%;\n  max-height: 100vh;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst TopAndBottom = `\npadding-left: 4vw;\npadding-right: 4vw;\n  @media (min-width: 900px) {\n    max-width: 900px;\n  }\n  @media (max-width: 900px) {\n    max-width: 900px;\n    padding-left: 4vw;\n    padding-right: 4vw;\n  }\n  width: 100%;\n`;\nconst ProgressWrapper = styled.div`\n  ${TopAndBottom}\n  margin-top: 12px;\n`;\n\nconst TopNav = styled.div`\n  ${TopAndBottom}\n`;\n","import React, { useState, useEffect, useRef } from \"react\";\n\nexport const useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    const tick = () => {\n      savedCallback.current();\n    };\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { GET_STORY, TOC_CHECKED } from \"../../queries/story\";\nimport { StorySummary } from \"./StorySummary\";\nimport { StoryContents } from \"./StoryContents\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Link } from \"react-router-dom\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { Divider } from \"@material-ui/core\";\nimport { ReadButton } from \"./ReadButton\";\nimport { useMedScreen } from \"../shared/breakpoints\";\n\nexport const Story = () => {\n  const medScreen = useMedScreen();\n  const { id } = useParams();\n  const { loading, error, data } = useQuery(GET_STORY, { variables: { id } });\n  const [sendTOCChecked] = useMutation(TOC_CHECKED);\n\n  useEffect(() => {\n    sendTOCChecked({\n      variables: { storyId: id }\n    });\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  const story = data.story;\n  return (\n    <div>\n      {medScreen && <StyledLink to=\"/\">{\"<\"} Library</StyledLink>}\n      <Wrapper>\n        {!medScreen && (\n          <>\n            <StyledLink to=\"/\">{\"<\"} Library</StyledLink>\n            <Divider />\n          </>\n        )}\n\n        <StorySummary story={data.story} noLink />\n        {!medScreen && (\n          <>\n            <Divider />\n            <ReadButton story={story} />\n          </>\n        )}\n        <StoryContents story={data.story} />\n      </Wrapper>\n    </div>\n  );\n};\n\nconst Wrapper = styled(Paper)`\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n\n  margin-right: auto;\n  align-self: center;\n\n  @media (max-width: 700px) {\n    padding-top: 1em;\n    text-align: left;\n  }\n  @media (min-width: 700px) {\n    text-align: center;\n    margin-top: 20px;\n    width: 80%;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${grey[900]};\n  font-size: 1.4em;\n  margin-left: 20px;\n  display: block;\n  text-decoration: none;\n  :hover {\n    text-decoration: underline;\n  }\n\n  @media (max-width: 700px) {\n    margin-bottom: 0.7em;\n  }\n  @media (min-width: 700px) {\n    padding-top: 20px;\n  }\n`;\n","import { createMuiTheme } from \"@material-ui/core\";\nimport grey from \"@material-ui/core/colors/grey\";\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\n\nexport const setBaseThemeVariables = () => {\n  set(\"--main-font\", \"Merriweather\");\n};\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#fff\",\n      main: \"#fff\",\n      dark: grey[400]\n    },\n    secondary: {\n      light: lightBlue[100],\n      main: lightBlue[500],\n      dark: lightBlue[800]\n    },\n    text: {\n      primary: grey[900],\n      secondary: grey[500],\n      disabled: grey[300],\n      hint: lightBlue[500]\n    },\n    background: {\n      paper: \"#fff\",\n      default: grey[100],\n      highlight: lightBlue[500]\n    }\n    // link: {\n    //   main: get(\"--link-main\"),\n    //   visited: get(\"--link-visited\"),\n    //   active: get(\"--link-active\")\n    // }\n  },\n  typography: {\n    fontFamily: [\"Merriweather\", \"serif\"],\n    button: {\n      fontFamily: [\"Merriweather Sans\", \"sans-serif\"],\n      fontWeight: \"bold\"\n    }\n  }\n});\n\nconst get = name => {\n  return getComputedStyle(document.documentElement).getPropertyValue(name);\n};\n\nconst set = (name, value) => {\n  document.documentElement.style.setProperty(name, value);\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Library } from './components/Library/Library';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { Reader } from './components/Reader/Reader';\nimport { Story } from './components/Library/Story';\nimport { theme } from './theme';\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst apollo = new ApolloClient();\n\nexport const App = () => {\n  return (\n    <ApolloProvider client={apollo}>\n      <Router>\n        <ThemeProvider theme={theme}>\n          <Switch>\n            <Route path=\"/chapter/:id\">\n              <Reader />\n            </Route>\n            <Route path=\"/story/:id\">\n              <Story />\n            </Route>\n            <Route path=\"/\">\n              <Library></Library>\n            </Route>\n          </Switch>\n        </ThemeProvider>\n      </Router>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\n// apollo\n//   .query({\n//     query:\n//   })\n//   .then(result => console.log(result));\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}